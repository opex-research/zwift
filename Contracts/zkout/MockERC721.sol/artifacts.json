{
  "contracts": {
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "IERC721TokenReceiver": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC721.sol\":\"IERC721TokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070\",\"dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "onERC721Received(address,address,uint256,bytes)": "150b7a02"
          }
        },
        "irOptimized": ""
      },
      "MockERC721": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "_symbol",
                "type": "string"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC721.sol\",\"kind\":\"dev\",\"methods\":{\"initialize(string,string)\":{\"details\":\"To hide constructor warnings across solc versions due to different constructor visibility requirements and syntaxes, we add an initialization function that can be called only once.\"}},\"stateVariables\":{\"initialized\":{\"details\":\"A bool to track whether the contract has been initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a mock contract of the ERC721 standard for testing purposes only, it SHOULD NOT be used in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC721.sol\":\"MockERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070\",\"dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.0"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockERC721.sol:MockERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r8\n\tst.1\t64, r8\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r12, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_15\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.le\t@.BB0_7\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr12, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.le\t@.BB0_16\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_22\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_166\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r10\n\tsub.s!\t@CPI0_21[0], r10, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r9\n\tsub.s!\t@CPI0_21[0], r9, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_24[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tadd\t@CPI0_25[0], r0, r5\n\tsub!\tr2, r12, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_25[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_24[0], r2, r6\n\tjump.gt\t@.BB0_83\n\tadd\t191, r2, r6\n\tsub.s\t32, r0, r11\n\tand\tr6, r11, r6\n\tsub.s!\t@CPI0_24[0], r6, r7\n\tjump.gt\t@.BB0_83\n\tadd\t36, r4, r4\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r12, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r4\n\tptr.add\tr1, r4, r1\n\tand\t31, r2, r12\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r5\n.BB0_184:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_184\n.BB0_226:\n\tadd\tr11, r0, stack-[2]\n\tadd\tr8, r0, stack-[5]\n\tsub!\tr12, r0, r5\n\tjump.eq\t@.BB0_186\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r12, r6\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr1, r1\n\tsub\t256, r6, r6\n\tshr\tr1, r6, r1\n\tshl\tr1, r6, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_186:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\tr10, r0, stack-[4]\n\tadd\tr10, r0, r1\n\tadd\tr9, r0, r2\n\tadd\tr3, r0, stack-[3]\n\tadd\tr9, r0, stack-[6]\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_66\n\tadd\t1, r0, r2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_188\n.BB0_193:\n\tjump\t@.BB0_70\n.BB0_7:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_31\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r1\n\tjump\t@.BB0_30\n.BB0_16:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_145\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_151\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_33\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_161\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_160\n\tadd\t@CPI0_33[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_164:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_164\n\tadd\t192, r3, r2\n\tjump\t@.BB0_160\n.BB0_13:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_61\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_24[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tadd\t@CPI0_25[0], r0, r4\n\tsub!\tr2, r12, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_25[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_24[0], r4, r2\n\tjump.gt\t@.BB0_83\n\tadd\t191, r4, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tsub.s!\t@CPI0_24[0], r7, r8\n\tjump.le\t@.BB0_93\n.BB0_83:\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB0_34\n.BB0_22:\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_209\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_21[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_30\n.BB0_45:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_21[0], r1, r2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r1\n\tadd\tr2, r0, stack-[4]\n\tjump.ne\t@.BB0_50\n.BB0_55:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_46[0], r2, r2\n\tadd\tstack-[6], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[5], r0, r7\n\tjump\t@.BB0_57\n.BB0_166:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_21[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[5], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_32[0], r0, r4\n\tadd\tstack-[4], r0, r5\n.BB0_57:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_24:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_29[0], r2, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_50[0], r2, r3\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_51[0], r2, r2\n\tadd.ne\tr0, r0, r1\n\tjump\t@.BB0_30\n.BB0_31:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.eq\t@.BB0_35\n.BB0_33:\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n.BB0_34:\n\tst.1\t4, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_145:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_150\n\tadd\t68, r2, r1\n\tadd\t@CPI0_38[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tadd\t10, r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tor\t@CPI0_39[0], r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_151:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_156\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t12, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_61:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_21[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r0, stack-[5]\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\tr4, r0, stack-[4]\n\tadd\tr4, r0, r1\n\tadd\tr3, r0, stack-[3]\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI0_26[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_66\n\tadd\t1, r0, r2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_68\n.BB0_70:\n\tand\t1, r2, r1\n\tnear_call\tr0, @require_helper_stringliteral_91ac, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_209:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r12, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.1\t128, r1\n\tld.1\t96, r1\n\tst.1\t160, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_214\n\tadd\tr0, r0, r2\n.BB0_213:\n\tadd\t128, r2, r3\n\tld.1\tr3, r3\n\tadd\t192, r2, r4\n\tst.1\tr4, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_213\n.BB0_214:\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t95, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_37\n\tadd\t160, r0, r2\n\tst.1\t0, r0\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_36\n\tadd\t@CPI0_41[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_40:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_40\n\tadd\t192, r3, r2\n\tjump\t@.BB0_36\n.BB0_161:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n.BB0_160:\n\tjump\t@.BB0_36\n.BB0_150:\n\tst.1\tr2, r1\n\tor\t@CPI0_37[0], r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_156:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_30:\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n.BB0_36:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_66:\n\trevert\n.BB0_93:\n\tadd\t36, r5, r5\n\tst.1\t64, r7\n\tst.1\t128, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r12, r5\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r5\n\tptr.add\tr1, r5, r5\n\tand\t31, r4, r6\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB0_223\n\tadd\tr0, r0, r8\n.BB0_96:\n\tshl.s\t5, r8, r9\n\tptr.add\tr5, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_96\n.BB0_223:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_98\n\tshl.s\t5, r7, r7\n\tptr.add\tr5, r7, r5\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr5, r5\n\tsub\t256, r6, r6\n\tshr\tr5, r6, r5\n\tshl\tr5, r6, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_98:\n\tadd\t160, r4, r4\n\tst.1\tr4, r0\n\tptr.add.s\t36, r1, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_24[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r4\n\tadd\t@CPI0_25[0], r0, r6\n\tsub!\tr4, r12, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_25[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.ge\tr0, r0, r6\n\tsub.s!\t@CPI0_25[0], r4, r4\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r7\n\tptr.add\tr1, r7, r4\n\tld\tr4, r6\n\tsub.s!\t@CPI0_24[0], r6, r4\n\tjump.gt\t@.BB0_83\n\tadd\t63, r6, r4\n\tand\tr4, r2, r8\n\tld.1\t64, r4\n\tadd\tr4, r8, r8\n\tsub!\tr8, r4, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI0_24[0], r8, r10\n\tjump.gt\t@.BB0_83\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB0_83\n\tadd\t36, r5, r9\n\tst.1\t64, r8\n\tst.1.inc\tr4, r6, r5\n\tadd\tr6, r9, r8\n\tsub!\tr8, r12, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r3\n\tptr.add\tr1, r3, r3\n\tand\t31, r6, r1\n\tshr.s!\t5, r6, r7\n\tjump.eq\t@.BB0_222\n\tadd\tr0, r0, r8\n.BB0_106:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr3, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_106\n.BB0_222:\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_108\n\tshl.s\t5, r7, r7\n\tptr.add\tr3, r7, r3\n\tadd\tr5, r7, r7\n\tshl.s\t3, r1, r1\n\tld.1\tr7, r8\n\tshl\tr8, r1, r8\n\tshr\tr8, r1, r8\n\tld\tr3, r3\n\tsub\t256, r1, r1\n\tshr\tr3, r1, r3\n\tshl\tr3, r1, r1\n\tor\tr1, r8, r1\n\tst.1\tr7, r1\n.BB0_108:\n\tadd\tr5, r6, r1\n\tst.1\tr1, r0\n\tadd\t6, r0, r1\n\tsload\tr1, r3\n\tand!\t255, r3, r3\n\tjump.ne\t@.BB0_109\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_24[0], r3, r6\n\tjump.gt\t@.BB0_83\n\tsload\tr0, r7\n\tand!\t1, r7, r6\n\tshr.s\t1, r7, r8\n\tand\t127, r8, r6\n\tadd.ne\tr8, r0, r6\n\tsub.s!\t31, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\txor\tr7, r8, r7\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_33\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB0_115\n\tadd\t31, r3, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_41[0], r7, r8\n\tadd\t@CPI0_41[0], r0, r7\n\tsub.s!\t32, r3, r9\n\tadd.ge\tr8, r0, r7\n\tst.1\t0, r0\n\tadd\t31, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI0_41[0], r6, r6\n\tsub!\tr7, r6, r8\n\tjump.ge\t@.BB0_115\n.BB0_116:\n\tsstore\tr7, r0\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_116\n.BB0_115:\n\tsub.s!\t31, r3, r6\n\tjump.le\t@.BB0_125\n\tand!\tr3, r2, r7\n\tadd\t160, r0, r8\n\tadd\t@CPI0_41[0], r0, r6\n\tst.1\t0, r0\n\tjump.eq\t@.BB0_122\n\tadd\t@CPI0_41[0], r0, r6\n\tadd\t32, r0, r10\n\tadd\tr0, r0, r8\n.BB0_120:\n\tadd\tr10, r0, r9\n\tadd\t128, r9, r10\n\tld.1\tr10, r10\n\tsstore\tr6, r10\n\tadd\t32, r9, r10\n\tadd\t1, r6, r6\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r11\n\tjump.lt\t@.BB0_120\n\tadd\t160, r9, r8\n.BB0_122:\n\tsub!\tr7, r3, r7\n\tjump.ge\t@.BB0_124\n\tshl.s\t3, r3, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r9\n\tshr\tr9, r7, r7\n\txor\tr7, r9, r7\n\tld.1\tr8, r8\n\tand\tr8, r7, r7\n\tsstore\tr6, r7\n.BB0_124:\n\tshl.s\t1, r3, r3\n\tor\t1, r3, r3\n\tjump\t@.BB0_117\n.BB0_50:\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_55\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n.BB0_54:\n\tst.1\tr2, r3\n\tadd\t@CPI0_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_68:\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\t132, r10, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_71\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_81\n.BB0_71:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\tr10, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_221\n\tadd\tr0, r0, r7\n.BB0_73:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_73\n.BB0_221:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_75\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_75:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_76\n.BB0_81:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_24[0], r1, r4\n\tjump.gt\t@.BB0_83\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_83\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r1\n\tand\t@CPI0_29[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tjump\t@.BB0_70\n.BB0_76:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_220\n\tadd\tr0, r0, r6\n.BB0_78:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_78\n.BB0_220:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_80\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_80:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_188:\n\tld.1\t64, r3\n\tadd\t100, r3, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\t132, r3, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[1]\n\tadd\t164, r3, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_191\n\tadd\tr0, r0, r3\n.BB0_190:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_190\n.BB0_191:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI0_21[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_194\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_204\n.BB0_194:\n\tadd\t31, r1, r1\n\tand\tstack-[2], r1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tstack-[1], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r7\n.BB0_196:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_196\n.BB0_225:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_198\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[1], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_198:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_199\n.BB0_204:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[1], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_24[0], r1, r4\n\tjump.gt\t@.BB0_83\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_83\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_29[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_28[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tjump\t@.BB0_193\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_109:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tjump\t@.BB0_54\n.BB0_199:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_224\n\tadd\tr0, r0, r6\n.BB0_201:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_201\n.BB0_224:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_203\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_203:\n\tjump\t@.BB0_80\n.BB0_125:\n\tsub!\tr3, r0, r6\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB0_127\n\tld.1\t160, r6\n.BB0_127:\n\tshl.s\t3, r3, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tand\tr6, r7, r6\n\tshl.s\t1, r3, r3\n\tor\tr6, r3, r3\n.BB0_117:\n\tsstore\tr0, r3\n\tld.1\tr4, r6\n\tsub.s!\t@CPI0_24[0], r6, r3\n\tjump.gt\t@.BB0_83\n\tadd\t1, r0, r3\n\tsload\tr3, r8\n\tand!\t1, r8, r7\n\tshr.s\t1, r8, r9\n\tand\t127, r9, r7\n\tadd.ne\tr9, r0, r7\n\tsub.s!\t31, r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\txor\tr8, r9, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_33\n\tsub.s!\t32, r7, r8\n\tjump.lt\t@.BB0_132\n\tadd\t31, r6, r8\n\tshr.s\t5, r8, r8\n\tadd\t@CPI0_33[0], r8, r9\n\tadd\t@CPI0_33[0], r0, r8\n\tsub.s!\t32, r6, r10\n\tadd.ge\tr9, r0, r8\n\tadd\t1, r0, r9\n\tst.1\t0, r9\n\tadd\t31, r7, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_33[0], r7, r7\n\tsub!\tr8, r7, r9\n\tjump.ge\t@.BB0_132\n.BB0_133:\n\tsstore\tr8, r0\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_133\n.BB0_132:\n\tsub.s!\t31, r6, r7\n\tjump.le\t@.BB0_142\n\tst.1\t0, r3\n\tand!\tr6, r2, r7\n\tadd\t32, r0, r5\n\tadd\t@CPI0_33[0], r0, r2\n\tjump.eq\t@.BB0_139\n\tadd\t@CPI0_33[0], r0, r2\n\tadd\t32, r0, r5\n\tadd\tr0, r0, r8\n.BB0_137:\n\tadd\tr5, r4, r9\n\tld.1\tr9, r9\n\tsstore\tr2, r9\n\tadd\t32, r5, r5\n\tadd\t1, r2, r2\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_137\n.BB0_139:\n\tsub!\tr7, r6, r7\n\tjump.ge\t@.BB0_141\n\tshl.s\t3, r6, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tadd\tr5, r4, r4\n\tld.1\tr4, r4\n\tand\tr4, r7, r4\n\tsstore\tr2, r4\n.BB0_141:\n\tshl.s\t1, r6, r2\n\tadd\tr3, r0, r4\n\tjump\t@.BB0_134\n.BB0_142:\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_144\n\tld.1\tr5, r2\n.BB0_144:\n\tshl.s\t3, r6, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tand\tr2, r4, r2\n\tshl.s\t1, r6, r4\n.BB0_134:\n\tor\tr2, r4, r2\n\tsstore\tr3, r2\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfinalize_allocation:\n.func_begin1:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tjump.gt\t@.BB1_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_2\n\tst.1\t64, r1\n\tret\n.BB1_2:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_1[0], r2, r4\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_transferFrom:\n.func_begin4:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI4_2[0], r1, r2\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI4_2[0], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB4_3\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI4_2[0], r1, stack-[5]\n\tjump.eq\t@.BB4_6\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[1]\n\tsub!\tr1, r2, r1\n\tadd\tr2, r0, stack-[3]\n\tjump.eq\t@.BB4_14\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.ne\t@.BB4_14\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI4_2[0], r1, r1\n\tsub!\tstack-[1], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.ne\t@.BB4_13\n.BB4_14:\n\tst.1\t0, r2\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB4_16\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB4_16\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI4_7[0], r2, r2\n\tor\tstack-[5], r2, r2\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tadd.ge\t@CPI4_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI4_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI4_9[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_16:\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI4_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t10, r0, r3\n\tjump\t@.BB4_4\n.BB4_6:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI4_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t17, r0, r3\n.BB4_4:\n\tst.1\tr2, r3\n\tadd\t@CPI4_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_13:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tjump\t@.BB4_4\n.func_end4:\n\nrequire_helper_stringliteral_91ac:\n.func_begin5:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tret\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_2[0], r0, r2\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin6:\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_0:\nCPI5_2:\nCPI7_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1666326813\nCPI0_3:\n\t.cell 2720838756\nCPI0_4:\n\t.cell 3363526364\nCPI0_5:\n\t.cell 3363526365\nCPI0_6:\n\t.cell 3917867461\nCPI0_7:\n\t.cell 2720838757\nCPI0_8:\n\t.cell 3096268766\nCPI0_9:\n\t.cell 1666326814\nCPI0_10:\n\t.cell 1889567281\nCPI0_11:\n\t.cell 2514000705\nCPI0_12:\n\t.cell 157198258\nCPI0_13:\n\t.cell 1115958797\nCPI0_14:\n\t.cell 1115958798\nCPI0_15:\n\t.cell 1289259894\nCPI0_16:\n\t.cell 157198259\nCPI0_17:\n\t.cell 599290589\nCPI0_18:\n\t.cell 33540519\nCPI0_19:\n\t.cell 117300739\nCPI0_20:\n\t.cell 135795452\nCPI0_21:\nCPI3_1:\nCPI4_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_22:\n\t.cell 2535301202817642044428229017600\nCPI0_23:\n\t.cell 2361183241434822606848\nCPI0_24:\nCPI1_0:\n\t.cell 18446744073709551615\nCPI0_25:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_26:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_27:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_28:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI0_29:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_30:\nCPI4_1:\nCPI7_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_31:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_32:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_33:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_34:\nCPI4_4:\nCPI5_1:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_35:\n\t.cell 40830636903031423861688139537390718479674427448325055209562639556715193827328\nCPI0_36:\n\t.cell 7922816253787617000789217640448\nCPI0_37:\n\t.cell 2535301200456458802993406410752\nCPI0_38:\n\t.cell 35420565423639537228617691553148466105545936757585078819855793298259008552960\nCPI0_39:\nCPI4_5:\nCPI5_3:\n\t.cell 7922816251426433759354395033600\nCPI0_40:\n\t.cell 29535183345145645464477851197593903596241110250713156662292127721300527415296\nCPI0_41:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_42:\n\t.cell 12993418652339351365341207855104\nCPI0_43:\nCPI1_1:\nCPI4_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_44:\nCPI1_2:\nCPI4_11:\n\t.cell 2852213850513516153367582212096\nCPI0_45:\nCPI4_6:\n\t.cell 35420565422380735808816581324811381250276386706089210115323610567592544043008\nCPI0_46:\nCPI4_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_47:\nCPI4_8:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_48:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_49:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_50:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_51:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI4_3:\n\t.cell 39496646634409606239827972489872868837952845752995518704443643484015993815040\nCPI4_9:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI4_12:\n\t.cell 33157247328247392177347867825146339663983762987302272919419008699839968968704\nCPI5_0:\n\t.cell 38584980805374072516973655170256187011857510180269267528927996738978845818880\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "initialize(string,string)": "4cd88b76",
            "isApprovedForAll(address,address)": "e985e9c5",
            "name()": "06fdde03",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "supportsInterface(bytes4)": "01ffc9a7",
            "symbol()": "95d89b41",
            "tokenURI(uint256)": "c87b56dd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/forge-std/src/mocks/MockERC721.sol\"\nobject \"MockERC721_567\" {\n    code {\n        {\n            /// @src 0:321:7567  \"contract MockERC721 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MockERC721_567_deployed\")\n            codecopy(_1, dataoffset(\"MockERC721_567_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/mocks/MockERC721.sol\"\n    object \"MockERC721_567_deployed\" {\n        code {\n            {\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(_3)\n                        let _4 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _4)) { revert(0, 0) }\n                        /// @src 0:5151:5251  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                        let expr := /** @src 0:5151:5176  \"interfaceId == 0x01ffc9a7\" */ eq(_4, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x01ffc9a7))\n                        /// @src 0:5151:5251  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:5226:5251  \"interfaceId == 0x80ac58cd\" */ eq(_4, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x80ac58cd))\n                        }\n                        /// @src 0:5151:5326  \"interfaceId == 0x01ffc9a7 // ERC165 Interface ID for ERC165...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 0:5301:5326  \"interfaceId == 0x5b5e139f\" */ eq(_4, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x5b5e139f))\n                        }\n                        mstore(_1, iszero(iszero(expr_1)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(_2)\n                        let ret := 0\n                        let slotValue := sload(0)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        let _5 := 0x20\n                        let _6 := 1\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(memPtr, _5), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(memPtr, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(memPtr, i), _5)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _5)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _5)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(_3))\n                        mstore(32, _3)\n                        let value_1 := and(sload(keccak256(0, _2)), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value_1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0 := abi_decode_address_8195()\n                        let value_2 := calldataload(36)\n                        mstore(0, value_2)\n                        mstore(32, /** @src 0:3022:3030  \"_ownerOf\" */ 0x02)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let _7 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(keccak256(0, _2)), _7)\n                        /// @src 0:3053:3111  \"msg.sender == owner || isApprovedForAll[owner][msg.sender]\"\n                        let expr_2 := /** @src 0:3053:3072  \"msg.sender == owner\" */ eq(/** @src 0:3053:3063  \"msg.sender\" */ caller(), /** @src 0:321:7567  \"contract MockERC721 {...\" */ cleaned)\n                        /// @src 0:3053:3111  \"msg.sender == owner || isApprovedForAll[owner][msg.sender]\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            mstore(0, cleaned)\n                            mstore(32, /** @src 0:3076:3092  \"isApprovedForAll\" */ 0x05)\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let _8 := keccak256(0, _2)\n                            mstore(0, /** @src 0:3053:3063  \"msg.sender\" */ caller())\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            mstore(32, _8)\n                            /// @src 0:3053:3111  \"msg.sender == owner || isApprovedForAll[owner][msg.sender]\"\n                            expr_2 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(sload(keccak256(0, _2)), 0xff)\n                        }\n                        /// @src 0:3045:3130  \"require(msg.sender == owner || isApprovedForAll[owner][msg.sender], \\\"NOT_AUTHORIZED\\\")\"\n                        require_helper_stringliteral_e7e2(expr_2)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        mstore(0, value_2)\n                        mstore(32, _3)\n                        let _9 := keccak256(0, _2)\n                        let _10 := and(value0, _7)\n                        sstore(_9, or(and(sload(_9), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 0:3182:3210  \"Approval(owner, spender, id)\"\n                        log4(/** @src 0:321:7567  \"contract MockERC721 {...\" */ 0, 0, /** @src 0:3182:3210  \"Approval(owner, spender, id)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, cleaned, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _10, /** @src 0:3182:3210  \"Approval(owner, spender, id)\" */ value_2)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        return(0, 0)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_transferFrom(param, param_1, param_2)\n                        return(0, 0)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(0, 0) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 0:4211:4213  \"id\"\n                        fun_transferFrom(param_3, param_4, param_5)\n                        /// @src 0:4246:4419  \"!_isContract(to)...\"\n                        let expr_3 := /** @src 0:7544:7558  \"codeLength > 0\" */ iszero(/** @src 0:7462:7527  \"assembly {...\" */ extcodesize(param_4))\n                        /// @src 0:4246:4419  \"!_isContract(to)...\"\n                        if /** @src 0:7544:7558  \"codeLength > 0\" */ iszero(expr_3)\n                        /// @src 0:4246:4419  \"!_isContract(to)...\"\n                        {\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let _11 := sub(shl(160, 1), 1)\n                            /// @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                            let _12 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ mload(_2)\n                            let _13 := shl(225, 0x0a85bd01)\n                            /// @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                            mstore(_12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _13)\n                            mstore(/** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ add(_12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3), /** @src 0:4324:4334  \"msg.sender\" */ caller())\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            mstore(add(/** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 36), and(param_3, _11))\n                            mstore(add(/** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 68), param_5)\n                            mstore(add(/** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 100), 128)\n                            mstore(add(/** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 132), 0)\n                            /// @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                            let _14 := call(gas(), /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(/** @src 0:4282:4306  \"IERC721TokenReceiver(to)\" */ param_4, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _11), 0, /** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 164, /** @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\" */ _12, 32)\n                            if iszero(_14)\n                            {\n                                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                                let pos := mload(_2)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                            let expr_4 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0\n                            /// @src 0:4282:4349  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")\"\n                            if _14\n                            {\n                                let _15 := 32\n                                if gt(32, returndatasize()) { _15 := returndatasize() }\n                                finalize_allocation(_12, _15)\n                                expr_4 := abi_decode_bytes4_fromMemory(_12, add(_12, _15))\n                            }\n                            /// @src 0:4246:4419  \"!_isContract(to)...\"\n                            expr_3 := /** @src 0:4282:4419  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")...\" */ eq(/** @src 0:321:7567  \"contract MockERC721 {...\" */ and(/** @src 0:4282:4419  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, \\\"\\\")...\" */ expr_4, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0xffffffff)), _13)\n                        }\n                        /// @src 0:4225:4461  \"require(...\"\n                        require_helper_stringliteral_91ac(expr_3)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        return(0, 0)\n                    }\n                    case 0x4cd88b76 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let offset := calldataload(_3)\n                        let _16 := 0xffffffffffffffff\n                        if gt(offset, _16) { revert(0, 0) }\n                        let value0_1 := abi_decode_string(add(_3, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _16) { revert(0, 0) }\n                        let value1 := abi_decode_string(add(_3, offset_1), calldatasize())\n                        if iszero(/** @src 0:2626:2638  \"!initialized\" */ iszero(/** @src 0:321:7567  \"contract MockERC721 {...\" */ and(sload(/** @src 0:2627:2638  \"initialized\" */ 0x06), /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0xff)))\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 19)\n                            mstore(add(memPtr_1, 68), \"ALREADY_INITIALIZED\")\n                            revert(memPtr_1, 100)\n                        }\n                        let newLen := mload(value0_1)\n                        if gt(newLen, _16)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        let _17 := extract_byte_array_length(sload(0))\n                        let _18 := 31\n                        if gt(_17, _18)\n                        {\n                            mstore(0, 0)\n                            let _19 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let deleteStart := add(_19, shr(5, add(newLen, _18)))\n                            if lt(newLen, 32) { deleteStart := _19 }\n                            let _20 := add(_19, shr(5, add(_17, _18)))\n                            let start := deleteStart\n                            for { } lt(start, _20) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, _18)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, 0)\n                            let dstPtr := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr, mload(add(value0_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(value0_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(0, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_3 := 0\n                            if newLen\n                            {\n                                value_3 := mload(add(value0_1, srcOffset))\n                            }\n                            sstore(0, or(and(value_3, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        let newLen_1 := mload(value1)\n                        if gt(newLen_1, _16)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        /// @src 0:2695:2711  \"symbol = _symbol\"\n                        let _21 := 0x01\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let _22 := extract_byte_array_length(sload(/** @src 0:2695:2711  \"symbol = _symbol\" */ _21))\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        if gt(_22, _18)\n                        {\n                            mstore(0, /** @src 0:2695:2711  \"symbol = _symbol\" */ _21)\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let _23 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let deleteStart_1 := add(_23, shr(5, add(newLen_1, _18)))\n                            if lt(newLen_1, 32) { deleteStart_1 := _23 }\n                            let _24 := add(_23, shr(5, add(_22, _18)))\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, _24)\n                            {\n                                start_1 := add(start_1, /** @src 0:2695:2711  \"symbol = _symbol\" */ _21)\n                            }\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, _18)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, /** @src 0:2695:2711  \"symbol = _symbol\" */ _21)\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let dstPtr_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_2 := 0\n                            for { } lt(i_2, loopEnd_1) { i_2 := add(i_2, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, /** @src 0:2695:2711  \"symbol = _symbol\" */ _21)\n                                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(value1, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 0:2695:2711  \"symbol = _symbol\" */ _21, /** @src 0:321:7567  \"contract MockERC721 {...\" */ add(shl(/** @src 0:2695:2711  \"symbol = _symbol\" */ _21, /** @src 0:321:7567  \"contract MockERC721 {...\" */ newLen_1), /** @src 0:2695:2711  \"symbol = _symbol\" */ _21))\n                        }\n                        default /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        {\n                            let value_4 := 0\n                            if newLen_1\n                            {\n                                value_4 := mload(add(value1, srcOffset_1))\n                            }\n                            sstore(/** @src 0:2695:2711  \"symbol = _symbol\" */ _21, /** @src 0:321:7567  \"contract MockERC721 {...\" */ or(and(value_4, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 0:2695:2711  \"symbol = _symbol\" */ _21, /** @src 0:321:7567  \"contract MockERC721 {...\" */ newLen_1)))\n                        }\n                        sstore(/** @src 0:2627:2638  \"initialized\" */ 0x06, /** @src 0:321:7567  \"contract MockERC721 {...\" */ or(and(sload(/** @src 0:2627:2638  \"initialized\" */ 0x06), /** @src 0:321:7567  \"contract MockERC721 {...\" */ not(255)), /** @src 0:2695:2711  \"symbol = _symbol\" */ _21))\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        return(0, 0)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(_3))\n                        mstore(32, /** @src 0:1506:1514  \"_ownerOf\" */ 0x02)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let cleaned_1 := and(sload(keccak256(0, _2)), sub(shl(160, 1), 1))\n                        if /** @src 0:1497:1533  \"(owner = _ownerOf[id]) != address(0)\" */ iszero(/** @src 0:321:7567  \"contract MockERC721 {...\" */ cleaned_1)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 10)\n                            mstore(add(memPtr_2, 68), \"NOT_MINTED\")\n                            revert(memPtr_2, 100)\n                        }\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, cleaned_1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let _25 := and(abi_decode_address_8195(), sub(shl(160, 1), 1))\n                        if /** @src 0:1651:1670  \"owner != address(0)\" */ iszero(/** @src 0:321:7567  \"contract MockERC721 {...\" */ _25)\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), 32)\n                            mstore(add(memPtr_3, 36), 12)\n                            mstore(add(memPtr_3, 68), \"ZERO_ADDRESS\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, _25)\n                        mstore(32, /** @src 0:1705:1715  \"_balanceOf\" */ 0x03)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let _26 := sload(keccak256(0, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _26)\n                        return(memPos_3, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_4 := mload(_2)\n                        let ret_1 := 0\n                        /// @src 0:1001:1021  \"string public symbol\"\n                        let _27 := 1\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let slotValue_1 := sload(/** @src 0:1001:1021  \"string public symbol\" */ 1)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_4, length_1)\n                        let _28 := 0x20\n                        switch and(slotValue_1, /** @src 0:1001:1021  \"string public symbol\" */ 1)\n                        case /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0 {\n                            mstore(add(memPtr_4, _28), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_4, shl(5, iszero(iszero(length_1)))), _28)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 0:1001:1021  \"string public symbol\" */ 1)\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_3 := 0\n                            for { } lt(i_3, length_1) { i_3 := add(i_3, _28) }\n                            {\n                                mstore(add(add(memPtr_4, i_3), _28), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 0:1001:1021  \"string public symbol\" */ _27)\n                            }\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            ret_1 := add(add(memPtr_4, i_3), _28)\n                        }\n                        finalize_allocation(memPtr_4, sub(ret_1, memPtr_4))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _28)\n                        return(memPos_4, sub(abi_encode_string(memPtr_4, add(memPos_4, _28)), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_8195()\n                        let value_5 := calldataload(36)\n                        let _29 := iszero(iszero(value_5))\n                        if iszero(eq(value_5, _29)) { revert(0, 0) }\n                        mstore(0, /** @src 0:3325:3335  \"msg.sender\" */ caller())\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        mstore(32, /** @src 0:3308:3324  \"isApprovedForAll\" */ 0x05)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let _30 := keccak256(0, _2)\n                        let _31 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(0, _31)\n                        mstore(32, _30)\n                        let dataSlot := keccak256(0, _2)\n                        let value_6 := and(sload(dataSlot), not(255))\n                        sstore(dataSlot, or(value_6, and(_29, 255)))\n                        /// @src 0:3373:3419  \"ApprovalForAll(msg.sender, operator, approved)\"\n                        let _32 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ mload(_2)\n                        mstore(_32, _29)\n                        /// @src 0:3373:3419  \"ApprovalForAll(msg.sender, operator, approved)\"\n                        log3(_32, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 32, /** @src 0:3373:3419  \"ApprovalForAll(msg.sender, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 0:3325:3335  \"msg.sender\" */ caller(), /** @src 0:3373:3419  \"ApprovalForAll(msg.sender, operator, approved)\" */ _31)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        return(0, 0)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_8195()\n                        let value1_1 := abi_decode_address()\n                        let value_7 := calldataload(68)\n                        let offset_2 := calldataload(100)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let array := abi_decode_available_length_string(add(offset_2, 36), calldataload(add(_3, offset_2)), calldatasize())\n                        /// @src 0:4605:4607  \"id\"\n                        fun_transferFrom(value0_3, value1_1, value_7)\n                        /// @src 0:4640:4815  \"!_isContract(to)...\"\n                        let expr_5 := /** @src 0:7544:7558  \"codeLength > 0\" */ iszero(/** @src 0:7462:7527  \"assembly {...\" */ extcodesize(value1_1))\n                        /// @src 0:4640:4815  \"!_isContract(to)...\"\n                        if /** @src 0:7544:7558  \"codeLength > 0\" */ iszero(expr_5)\n                        /// @src 0:4640:4815  \"!_isContract(to)...\"\n                        {\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            let _33 := sub(shl(160, 1), 1)\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            let _34 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ mload(_2)\n                            let _35 := shl(225, 0x0a85bd01)\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            mstore(_34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _35)\n                            mstore(/** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ add(_34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3), /** @src 0:4718:4728  \"msg.sender\" */ caller())\n                            /// @src 0:321:7567  \"contract MockERC721 {...\"\n                            mstore(add(/** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 36), and(value0_3, _33))\n                            mstore(add(/** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 68), value_7)\n                            mstore(add(/** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 100), 128)\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            let _36 := call(gas(), /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(/** @src 0:4676:4700  \"IERC721TokenReceiver(to)\" */ value1_1, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _33), 0, /** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34, sub(/** @src 0:321:7567  \"contract MockERC721 {...\" */ abi_encode_string(array, add(/** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 132)), /** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ _34), _34, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 32)\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            if iszero(_36)\n                            {\n                                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                                let pos_1 := mload(_2)\n                                returndatacopy(pos_1, 0, returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            let expr_6 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0\n                            /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                            if _36\n                            {\n                                let _37 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ 32\n                                /// @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\"\n                                if gt(/** @src 0:321:7567  \"contract MockERC721 {...\" */ 32, /** @src 0:4676:4745  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)\" */ returndatasize()) { _37 := returndatasize() }\n                                finalize_allocation(_34, _37)\n                                expr_6 := abi_decode_bytes4_fromMemory(_34, add(_34, _37))\n                            }\n                            /// @src 0:4640:4815  \"!_isContract(to)...\"\n                            expr_5 := /** @src 0:4676:4815  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)...\" */ eq(/** @src 0:321:7567  \"contract MockERC721 {...\" */ and(/** @src 0:4676:4815  \"IERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, data)...\" */ expr_6, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0xffffffff)), _35)\n                        }\n                        /// @src 0:4619:4857  \"require(...\"\n                        require_helper_stringliteral_91ac(expr_5)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        return(0, 0)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(0, 0) }\n                        let _38 := 32\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 32)\n                        let length_2 := mload(96)\n                        mstore(add(memPos_5, 32), length_2)\n                        let i_4 := 0\n                        for { } lt(i_4, length_2) { i_4 := add(i_4, _38) }\n                        {\n                            mstore(add(add(memPos_5, i_4), _2), mload(add(128, i_4)))\n                        }\n                        mstore(add(add(memPos_5, length_2), _2), 0)\n                        return(memPos_5, add(sub(add(memPos_5, and(add(length_2, 31), not(31))), memPos_5), _2))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_8195()\n                        let value1_2 := abi_decode_address()\n                        let _39 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_4, _39))\n                        mstore(32, /** @src 0:1976:2044  \"mapping(address => mapping(address => bool)) public isApprovedForAll\" */ 5)\n                        /// @src 0:321:7567  \"contract MockERC721 {...\"\n                        let _40 := keccak256(0, _2)\n                        mstore(0, and(value1_2, _39))\n                        mstore(32, _40)\n                        let value_8 := and(sload(keccak256(0, _2)), 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_8)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_8195() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:321:7567  \"contract MockERC721 {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n            }\n            function require_helper_stringliteral_e7e2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"NOT_AUTHORIZED\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 274 @src 0:3432:4093  \"function transferFrom(address from, address to, uint256 id) public virtual {...\"\n            function fun_transferFrom(var_from, var_to, var_id)\n            {\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ var_id)\n                let _1 := 0x20\n                mstore(_1, /** @src 0:3533:3541  \"_ownerOf\" */ 0x02)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := 0x40\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)), _2)\n                /// @src 0:3525:3545  \"from == _ownerOf[id]\"\n                let _4 := /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(/** @src 0:3525:3545  \"from == _ownerOf[id]\" */ var_from, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _2)\n                if iszero(/** @src 0:3525:3545  \"from == _ownerOf[id]\" */ eq(_4, cleaned))\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                {\n                    let memPtr := mload(_3)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), _1)\n                    mstore(add(memPtr, 36), 10)\n                    mstore(add(memPtr, 68), \"WRONG_FROM\")\n                    revert(memPtr, 100)\n                }\n                let _5 := and(/** @src 0:3579:3595  \"to != address(0)\" */ var_to, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _2)\n                if /** @src 0:3579:3595  \"to != address(0)\" */ iszero(/** @src 0:321:7567  \"contract MockERC721 {...\" */ _5)\n                {\n                    let memPtr_1 := mload(_3)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), _1)\n                    mstore(add(memPtr_1, 36), 17)\n                    mstore(add(memPtr_1, 68), \"INVALID_RECIPIENT\")\n                    revert(memPtr_1, 100)\n                }\n                /// @src 0:3649:3705  \"msg.sender == from || isApprovedForAll[from][msg.sender]\"\n                let expr := /** @src 0:3649:3667  \"msg.sender == from\" */ eq(/** @src 0:3649:3659  \"msg.sender\" */ caller(), /** @src 0:3649:3667  \"msg.sender == from\" */ _4)\n                /// @src 0:3649:3705  \"msg.sender == from || isApprovedForAll[from][msg.sender]\"\n                if iszero(expr)\n                {\n                    /// @src 0:321:7567  \"contract MockERC721 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _4)\n                    mstore(_1, /** @src 0:3671:3687  \"isApprovedForAll\" */ 0x05)\n                    /// @src 0:321:7567  \"contract MockERC721 {...\"\n                    let _6 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:3649:3659  \"msg.sender\" */ caller())\n                    /// @src 0:321:7567  \"contract MockERC721 {...\"\n                    mstore(_1, _6)\n                    /// @src 0:3649:3705  \"msg.sender == from || isApprovedForAll[from][msg.sender]\"\n                    expr := /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)), 0xff)\n                }\n                /// @src 0:3649:3738  \"msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id]\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    /// @src 0:321:7567  \"contract MockERC721 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ var_id)\n                    mstore(_1, /** @src 0:3723:3734  \"getApproved\" */ 0x04)\n                    /// @src 0:3649:3738  \"msg.sender == from || isApprovedForAll[from][msg.sender] || msg.sender == getApproved[id]\"\n                    expr_1 := /** @src 0:3709:3738  \"msg.sender == getApproved[id]\" */ eq(/** @src 0:3649:3659  \"msg.sender\" */ caller(), /** @src 0:321:7567  \"contract MockERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)), _2))\n                }\n                /// @src 0:3628:3766  \"require(...\"\n                require_helper_stringliteral_e7e2(expr_1)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _4)\n                mstore(_1, /** @src 0:3942:3952  \"_balanceOf\" */ 0x03)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)\n                let _7 := sload(/** @src 0:3942:3960  \"_balanceOf[from]--\" */ dataSlot)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                if iszero(_7)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0x24)\n                }\n                let _8 := not(0)\n                sstore(dataSlot, add(_7, _8))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _5)\n                mstore(_1, /** @src 0:3942:3952  \"_balanceOf\" */ 0x03)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)\n                let _9 := sload(/** @src 0:3971:3987  \"_balanceOf[to]++\" */ dataSlot_1)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                if eq(_9, _8)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ 0x24)\n                }\n                sstore(dataSlot_1, add(_9, 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ var_id)\n                mstore(_1, /** @src 0:3533:3541  \"_ownerOf\" */ 0x02)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let _10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)\n                let _11 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(_10, or(and(sload(_10), _11), _5))\n                mstore(_1, /** @src 0:4033:4044  \"getApproved\" */ 0x04)\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:321:7567  \"contract MockERC721 {...\" */ _3)\n                sstore(dataSlot_2, and(sload(dataSlot_2), _11))\n                /// @src 0:4064:4086  \"Transfer(from, to, id)\"\n                log4(/** @src -1:-1:-1 */ 0, 0, /** @src 0:4064:4086  \"Transfer(from, to, id)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _4, _5, var_id)\n            }\n            /// @src 0:321:7567  \"contract MockERC721 {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:321:7567  \"contract MockERC721 {...\"\n                value0 := value\n            }\n            function require_helper_stringliteral_91ac(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"UNSAFE_RECIPIENT\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f4bfc1308d64c03db77a87fc4731ed651166d73dc6db0dea6c356c630b1aad7e64736f6c63430008180033\"\n    }\n}\n",
        "hash": "010001cdb7e1c40db736ca381ad3527d7fc9e2c9566b983b81628cc06f8fa48e",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "lib/forge-std/src/mocks/MockERC721.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/forge-std/src/mocks/MockERC721.sol",
        "exportedSymbols": {
          "IERC721TokenReceiver": [
            581
          ],
          "MockERC721": [
            567
          ]
        },
        "id": 582,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2",
              "<",
              "0.9",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:31:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "MockERC721",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "65:256:0",
              "text": "@notice This is a mock contract of the ERC721 standard for testing purposes only, it SHOULD NOT be used in production.\n @dev Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC721.sol"
            },
            "fullyImplemented": true,
            "id": 567,
            "linearizedBaseContracts": [
              567
            ],
            "name": "MockERC721",
            "nameLocation": "330:10:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                "id": 10,
                "name": "Transfer",
                "nameLocation": "532:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 9,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 4,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "557:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "541:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "541:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "579:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "563:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "563:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "599:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 10,
                      "src": "583:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "583:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "540:62:0"
                },
                "src": "526:77:0"
              },
              {
                "anonymous": false,
                "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                "id": 18,
                "name": "Approval",
                "nameLocation": "615:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 17,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 12,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "640:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "624:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "624:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "663:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "647:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "647:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "688:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "672:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "672:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "623:68:0"
                },
                "src": "609:83:0"
              },
              {
                "anonymous": false,
                "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                "id": 26,
                "name": "ApprovalForAll",
                "nameLocation": "704:14:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 20,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "735:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "719:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "719:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "758:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "742:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "742:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "773:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "768:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "768:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "718:64:0"
                },
                "src": "698:85:0"
              },
              {
                "constant": false,
                "functionSelector": "06fdde03",
                "id": 28,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "990:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "976:18:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 27,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "976:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "95d89b41",
                "id": 30,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "1015:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "1001:20:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 29,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1001:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 37,
                  "nodeType": "Block",
                  "src": "1102:2:0",
                  "statements": []
                },
                "functionSelector": "c87b56dd",
                "id": 38,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "tokenURI",
                "nameLocation": "1037:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1054:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 38,
                      "src": "1046:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1046:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1045:12:0"
                },
                "returnParameters": {
                  "id": 36,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 38,
                      "src": "1087:13:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1087:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1086:15:0"
                },
                "scope": 567,
                "src": "1028:76:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "_ownerOf",
                "nameLocation": "1337:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "1300:45:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "typeName": {
                  "id": 41,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1300:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "_balanceOf",
                "nameLocation": "1389:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "1352:47:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 45,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1352:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 68,
                  "nodeType": "Block",
                  "src": "1479:76:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "id": 58,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 54,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "1498:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 55,
                                      "name": "_ownerOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42,
                                      "src": "1506:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                        "typeString": "mapping(uint256 => address)"
                                      }
                                    },
                                    "id": 57,
                                    "indexExpression": {
                                      "id": 56,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48,
                                      "src": "1515:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1506:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1498:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 59,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1497:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 62,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1531:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 61,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1523:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 60,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1523:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1523:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1497:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f4d494e544544",
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1535:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            },
                            "value": "NOT_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            }
                          ],
                          "id": 53,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1489:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:59:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 67,
                      "nodeType": "ExpressionStatement",
                      "src": "1489:59:0"
                    }
                  ]
                },
                "functionSelector": "6352211e",
                "id": 69,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "ownerOf",
                "nameLocation": "1415:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 49,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 48,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1431:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1423:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1423:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1422:12:0"
                },
                "returnParameters": {
                  "id": 52,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1472:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "1464:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1464:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1463:15:0"
                },
                "scope": 567,
                "src": "1406:149:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 90,
                  "nodeType": "Block",
                  "src": "1633:96:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 77,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1651:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 80,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1668:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1660:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1660:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1651:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5a45524f5f41444452455353",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1672:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                              "typeString": "literal_string \"ZERO_ADDRESS\""
                            },
                            "value": "ZERO_ADDRESS"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af",
                              "typeString": "literal_string \"ZERO_ADDRESS\""
                            }
                          ],
                          "id": 76,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1643:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 85,
                      "nodeType": "ExpressionStatement",
                      "src": "1643:44:0"
                    },
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 86,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "1705:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "id": 87,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1716:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1705:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 75,
                      "id": 89,
                      "nodeType": "Return",
                      "src": "1698:24:0"
                    }
                  ]
                },
                "functionSelector": "70a08231",
                "id": 91,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "1570:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 72,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1588:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "1580:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1579:15:0"
                },
                "returnParameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "1624:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1624:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1623:9:0"
                },
                "scope": 567,
                "src": "1561:168:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "081812fc",
                "id": 95,
                "mutability": "mutable",
                "name": "getApproved",
                "nameLocation": "1958:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "1923:46:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "typeName": {
                  "id": 94,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1923:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "e985e9c5",
                "id": 101,
                "mutability": "mutable",
                "name": "isApprovedForAll",
                "nameLocation": "2028:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "1976:68:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "typeName": {
                  "id": 100,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1976:44:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(address => mapping(address => bool))"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 99,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 97,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2003:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1995:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 98,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2014:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 102,
                  "nodeType": "StructuredDocumentation",
                  "src": "2232:67:0",
                  "text": "@dev A bool to track whether the contract has been initialized."
                },
                "id": 104,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "2317:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 567,
                "src": "2304:24:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 103,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2304:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 130,
                  "nodeType": "Block",
                  "src": "2608:139:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2626:12:0",
                            "subExpression": {
                              "id": 113,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "2627:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "414c52454144595f494e495449414c495a4544",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2640:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            },
                            "value": "ALREADY_INITIALIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            }
                          ],
                          "id": 112,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2618:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2618:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 117,
                      "nodeType": "ExpressionStatement",
                      "src": "2618:44:0"
                    },
                    {
                      "expression": {
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 118,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2673:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 119,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2680:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2673:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 121,
                      "nodeType": "ExpressionStatement",
                      "src": "2673:12:0"
                    },
                    {
                      "expression": {
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 122,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "2695:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 123,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2695:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 125,
                      "nodeType": "ExpressionStatement",
                      "src": "2695:16:0"
                    },
                    {
                      "expression": {
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 126,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "2722:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2736:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2722:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 129,
                      "nodeType": "ExpressionStatement",
                      "src": "2722:18:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 105,
                  "nodeType": "StructuredDocumentation",
                  "src": "2335:197:0",
                  "text": "@dev To hide constructor warnings across solc versions due to different constructor visibility requirements and\n syntaxes, we add an initialization function that can be called only once."
                },
                "functionSelector": "4cd88b76",
                "id": 131,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "initialize",
                "nameLocation": "2546:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 110,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "_name",
                      "nameLocation": "2571:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "2557:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2557:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nameLocation": "2592:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "2578:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2578:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2556:44:0"
                },
                "returnParameters": {
                  "id": 111,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2608:0:0"
                },
                "scope": 567,
                "src": "2537:210:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 171,
                  "nodeType": "Block",
                  "src": "2996:221:0",
                  "statements": [
                    {
                      "assignments": [
                        139
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 139,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "3014:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 171,
                          "src": "3006:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3006:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 143,
                      "initialValue": {
                        "baseExpression": {
                          "id": 140,
                          "name": "_ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "3022:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "id": 141,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3031:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3022:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3006:28:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 145,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3053:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3057:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3053:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 147,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "3067:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3053:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 149,
                                  "name": "isApprovedForAll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101,
                                  "src": "3076:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(address => mapping(address => bool))"
                                  }
                                },
                                "id": 151,
                                "indexExpression": {
                                  "id": 150,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "3093:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3076:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 154,
                              "indexExpression": {
                                "expression": {
                                  "id": 152,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3100:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3104:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3100:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3076:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3053:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3113:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 144,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3045:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3045:85:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 158,
                      "nodeType": "ExpressionStatement",
                      "src": "3045:85:0"
                    },
                    {
                      "expression": {
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 159,
                            "name": "getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "3141:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 161,
                          "indexExpression": {
                            "id": 160,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3153:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3141:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 162,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "3159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3141:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 164,
                      "nodeType": "ExpressionStatement",
                      "src": "3141:25:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 166,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3191:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 167,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3198:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 168,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3207:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 165,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3182:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3182:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 170,
                      "nodeType": "EmitStatement",
                      "src": "3177:33:0"
                    }
                  ]
                },
                "functionSelector": "095ea7b3",
                "id": 172,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "2944:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 136,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "2960:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 172,
                      "src": "2952:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2952:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "2977:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 172,
                      "src": "2969:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2951:29:0"
                },
                "returnParameters": {
                  "id": 137,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2996:0:0"
                },
                "scope": 567,
                "src": "2935:282:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 195,
                  "nodeType": "Block",
                  "src": "3298:128:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 179,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "3308:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 183,
                            "indexExpression": {
                              "expression": {
                                "id": 180,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3325:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3329:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3325:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3308:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "id": 182,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "3337:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3308:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 185,
                          "name": "approved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "3349:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3308:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 187,
                      "nodeType": "ExpressionStatement",
                      "src": "3308:49:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 189,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3388:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3392:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3388:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 191,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "3400:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 192,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "3410:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 188,
                          "name": "ApprovalForAll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "3373:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (address,address,bool)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3373:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 194,
                      "nodeType": "EmitStatement",
                      "src": "3368:51:0"
                    }
                  ]
                },
                "functionSelector": "a22cb465",
                "id": 196,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setApprovalForAll",
                "nameLocation": "3232:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 177,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "3258:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "3250:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "3273:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "3268:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3268:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3249:33:0"
                },
                "returnParameters": {
                  "id": 178,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3298:0:0"
                },
                "scope": 567,
                "src": "3223:203:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 273,
                  "nodeType": "Block",
                  "src": "3507:586:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 206,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3525:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 207,
                                "name": "_ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3533:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 209,
                              "indexExpression": {
                                "id": 208,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "3542:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3533:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3525:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "57524f4e475f46524f4d",
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3547:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
                              "typeString": "literal_string \"WRONG_FROM\""
                            },
                            "value": "WRONG_FROM"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f70366941d4d371c05a2457cbc0f4d05a3d6bc57ab01a7c3338bfed233eebe93",
                              "typeString": "literal_string \"WRONG_FROM\""
                            }
                          ],
                          "id": 205,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3517:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3517:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 213,
                      "nodeType": "ExpressionStatement",
                      "src": "3517:43:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 215,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3579:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3593:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3585:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 216,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3585:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3585:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3579:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f524543495049454e54",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3597:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            },
                            "value": "INVALID_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            }
                          ],
                          "id": 214,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 223,
                      "nodeType": "ExpressionStatement",
                      "src": "3571:46:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 225,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3649:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 226,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3653:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3649:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 227,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "3663:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3649:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 229,
                                    "name": "isApprovedForAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 101,
                                    "src": "3671:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 231,
                                  "indexExpression": {
                                    "id": 230,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "3688:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3671:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 234,
                                "indexExpression": {
                                  "expression": {
                                    "id": 232,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3694:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3698:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3694:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3671:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3649:56:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 236,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3709:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3713:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3709:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 238,
                                  "name": "getApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "3723:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 240,
                                "indexExpression": {
                                  "id": 239,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "3735:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3723:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3709:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3649:89:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3740:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 224,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3628:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3628:138:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 245,
                      "nodeType": "ExpressionStatement",
                      "src": "3628:138:0"
                    },
                    {
                      "expression": {
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "3942:18:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 246,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "3942:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 248,
                          "indexExpression": {
                            "id": 247,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3953:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3942:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 250,
                      "nodeType": "ExpressionStatement",
                      "src": "3942:18:0"
                    },
                    {
                      "expression": {
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "3971:16:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 251,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "3971:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 253,
                          "indexExpression": {
                            "id": 252,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "3982:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3971:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 255,
                      "nodeType": "ExpressionStatement",
                      "src": "3971:16:0"
                    },
                    {
                      "expression": {
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 256,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3998:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 258,
                          "indexExpression": {
                            "id": 257,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4007:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3998:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 259,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "4013:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3998:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 261,
                      "nodeType": "ExpressionStatement",
                      "src": "3998:17:0"
                    },
                    {
                      "expression": {
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "4026:22:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 262,
                            "name": "getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "4033:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 264,
                          "indexExpression": {
                            "id": 263,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4045:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4033:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 266,
                      "nodeType": "ExpressionStatement",
                      "src": "4026:22:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 268,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "4073:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 269,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4079:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 270,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4083:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 267,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "4064:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4064:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 272,
                      "nodeType": "EmitStatement",
                      "src": "4059:27:0"
                    }
                  ]
                },
                "functionSelector": "23b872dd",
                "id": 274,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "3441:12:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 203,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "3462:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "3454:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3454:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3476:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "3468:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3468:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "3488:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 274,
                      "src": "3480:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3480:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3453:38:0"
                },
                "returnParameters": {
                  "id": 204,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3507:0:0"
                },
                "scope": 567,
                "src": "3432:661:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 312,
                  "nodeType": "Block",
                  "src": "4178:290:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 284,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "4201:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 285,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "4207:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 286,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4211:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 283,
                          "name": "transferFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "4188:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4188:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 288,
                      "nodeType": "ExpressionStatement",
                      "src": "4188:26:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4246:16:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 291,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 278,
                                    "src": "4259:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 290,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "4247:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4247:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 298,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4324:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4328:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4324:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 300,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 276,
                                    "src": "4336:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 301,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "4342:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4346:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 295,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 278,
                                        "src": "4303:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 294,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 581,
                                      "src": "4282:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4282:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$581",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4307:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "4282:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4282:67:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 304,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "4373:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4394:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "4373:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4411:8:0",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4373:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "4282:137:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4246:173:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4433:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 289,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4225:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4225:236:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 311,
                      "nodeType": "ExpressionStatement",
                      "src": "4225:236:0"
                    }
                  ]
                },
                "functionSelector": "42842e0e",
                "id": 313,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "4108:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 281,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4133:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "4125:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4125:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 278,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4147:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "4139:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 277,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4139:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 280,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4159:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "4151:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4151:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4124:38:0"
                },
                "returnParameters": {
                  "id": 282,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4178:0:0"
                },
                "scope": 567,
                "src": "4099:369:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 353,
                  "nodeType": "Block",
                  "src": "4572:292:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 325,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "4595:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 326,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "4601:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 327,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "4605:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 324,
                          "name": "transferFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "4582:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4582:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 329,
                      "nodeType": "ExpressionStatement",
                      "src": "4582:26:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4640:16:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 332,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 317,
                                    "src": "4653:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 331,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "4641:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4641:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 339,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4718:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4722:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4718:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 341,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 315,
                                    "src": "4730:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 342,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 319,
                                    "src": "4736:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 343,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 321,
                                    "src": "4740:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 336,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 317,
                                        "src": "4697:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 335,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 581,
                                      "src": "4676:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 337,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4676:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$581",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4701:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "4676:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4676:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 345,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "4769:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4790:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "4769:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4807:8:0",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4769:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "4676:139:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4640:175:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4829:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 330,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4619:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4619:238:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 352,
                      "nodeType": "ExpressionStatement",
                      "src": "4619:238:0"
                    }
                  ]
                },
                "functionSelector": "b88d4fde",
                "id": 354,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nameLocation": "4483:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 322,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4508:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4500:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4500:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4522:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4514:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4514:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4534:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4526:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4526:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 321,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4551:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "4538:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4538:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4499:57:0"
                },
                "returnParameters": {
                  "id": 323,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4572:0:0"
                },
                "scope": 567,
                "src": "4474:390:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 373,
                  "nodeType": "Block",
                  "src": "5134:241:0",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 361,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "5151:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783031666663396137",
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5166:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_33540519_by_1",
                                "typeString": "int_const 33540519"
                              },
                              "value": "0x01ffc9a7"
                            },
                            "src": "5151:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 364,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "5226:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783830616335386364",
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5241:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2158778573_by_1",
                                "typeString": "int_const 2158778573"
                              },
                              "value": "0x80ac58cd"
                            },
                            "src": "5226:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5151:100:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 368,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "5301:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783562356531333966",
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5316:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1532892063_by_1",
                              "typeString": "int_const 1532892063"
                            },
                            "value": "0x5b5e139f"
                          },
                          "src": "5301:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5151:175:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 360,
                      "id": 372,
                      "nodeType": "Return",
                      "src": "5144:182:0"
                    }
                  ]
                },
                "functionSelector": "01ffc9a7",
                "id": 374,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nameLocation": "5061:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 357,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "interfaceId",
                      "nameLocation": "5086:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "5079:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "5079:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5078:20:0"
                },
                "returnParameters": {
                  "id": 360,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 374,
                      "src": "5128:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5128:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5127:6:0"
                },
                "scope": 567,
                "src": "5052:323:0",
                "stateMutability": "pure",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 423,
                  "nodeType": "Block",
                  "src": "5625:282:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 382,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "5643:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5657:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5649:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5649:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5649:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5643:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f524543495049454e54",
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5661:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            },
                            "value": "INVALID_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5e7bf34c5f9e77c6f415365fc02ea1195419ccebda18d14265f0c098f3687483",
                              "typeString": "literal_string \"INVALID_RECIPIENT\""
                            }
                          ],
                          "id": 381,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5635:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5635:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 390,
                      "nodeType": "ExpressionStatement",
                      "src": "5635:46:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 392,
                                "name": "_ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "5700:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 394,
                              "indexExpression": {
                                "id": 393,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 378,
                                "src": "5709:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5700:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5724:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5716:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 395,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5716:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5716:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5700:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "414c52454144595f4d494e544544",
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5728:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
                              "typeString": "literal_string \"ALREADY_MINTED\""
                            },
                            "value": "ALREADY_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e3f56786f4dc15ea567a5bcea1aa6e11424106cac78b0acf41b1b7deccad9f1b",
                              "typeString": "literal_string \"ALREADY_MINTED\""
                            }
                          ],
                          "id": 391,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5692:53:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 402,
                      "nodeType": "ExpressionStatement",
                      "src": "5692:53:0"
                    },
                    {
                      "expression": {
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "5812:16:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 403,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "5812:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 405,
                          "indexExpression": {
                            "id": 404,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "5823:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5812:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 407,
                      "nodeType": "ExpressionStatement",
                      "src": "5812:16:0"
                    },
                    {
                      "expression": {
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 408,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "5839:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 410,
                          "indexExpression": {
                            "id": 409,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5848:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5839:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 411,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 376,
                          "src": "5854:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5839:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 413,
                      "nodeType": "ExpressionStatement",
                      "src": "5839:17:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5889:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5881:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 415,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5881:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5881:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 419,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "5893:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 420,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5897:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 414,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "5872:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5872:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 422,
                      "nodeType": "EmitStatement",
                      "src": "5867:33:0"
                    }
                  ]
                },
                "id": 424,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nameLocation": "5578:5:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 379,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "5592:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "5584:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 375,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5584:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "5604:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "5596:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5596:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5583:24:0"
                },
                "returnParameters": {
                  "id": 380,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5625:0:0"
                },
                "scope": 567,
                "src": "5569:338:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 469,
                  "nodeType": "Block",
                  "src": "5957:238:0",
                  "statements": [
                    {
                      "assignments": [
                        430
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 430,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "5975:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 469,
                          "src": "5967:13:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 429,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5967:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 434,
                      "initialValue": {
                        "baseExpression": {
                          "id": 431,
                          "name": "_ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5983:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 433,
                        "indexExpression": {
                          "id": 432,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "5992:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5983:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5967:28:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 436,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "6014:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6031:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6023:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 437,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6023:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6023:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6014:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4e4f545f4d494e544544",
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6035:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            },
                            "value": "NOT_MINTED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e904b298bc24890ae0c043938d840f08b90773c1635904efe1336d6f851f98ca",
                              "typeString": "literal_string \"NOT_MINTED\""
                            }
                          ],
                          "id": 435,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6006:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6006:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 444,
                      "nodeType": "ExpressionStatement",
                      "src": "6006:42:0"
                    },
                    {
                      "expression": {
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "6059:19:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 445,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "6059:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 447,
                          "indexExpression": {
                            "id": 446,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "6070:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6059:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 449,
                      "nodeType": "ExpressionStatement",
                      "src": "6059:19:0"
                    },
                    {
                      "expression": {
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "6089:19:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 450,
                            "name": "_ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "6096:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 452,
                          "indexExpression": {
                            "id": 451,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "6105:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6096:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 454,
                      "nodeType": "ExpressionStatement",
                      "src": "6089:19:0"
                    },
                    {
                      "expression": {
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "6119:22:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 455,
                            "name": "getApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "6126:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "id": 456,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "6138:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6126:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 459,
                      "nodeType": "ExpressionStatement",
                      "src": "6119:22:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 461,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "6166:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6181:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6173:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 462,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6173:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6173:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 466,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "6185:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 460,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "6157:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6157:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 468,
                      "nodeType": "EmitStatement",
                      "src": "6152:36:0"
                    }
                  ]
                },
                "id": 470,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burn",
                "nameLocation": "5922:5:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 427,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "5936:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "5928:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5928:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5927:12:0"
                },
                "returnParameters": {
                  "id": 428,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5957:0:0"
                },
                "scope": 567,
                "src": "5913:282:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 508,
                  "nodeType": "Block",
                  "src": "6449:283:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 478,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "6465:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 479,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "6469:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 477,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "6459:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6459:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 481,
                      "nodeType": "ExpressionStatement",
                      "src": "6459:13:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6504:16:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 484,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 472,
                                    "src": "6517:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 483,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "6505:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6505:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 491,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6582:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6586:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6582:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6602:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 494,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6594:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 493,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6594:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6594:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 497,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 474,
                                    "src": "6606:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6610:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 488,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 472,
                                        "src": "6561:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 487,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 581,
                                      "src": "6540:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6540:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$581",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6565:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "6540:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6540:73:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 500,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "6637:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6658:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "6637:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6675:8:0",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6637:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6540:143:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6504:179:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6697:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 482,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6483:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6483:242:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 507,
                      "nodeType": "ExpressionStatement",
                      "src": "6483:242:0"
                    }
                  ]
                },
                "id": 509,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_safeMint",
                "nameLocation": "6398:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 475,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 472,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "6416:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "6408:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6408:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6428:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "6420:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6420:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6407:24:0"
                },
                "returnParameters": {
                  "id": 476,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6449:0:0"
                },
                "scope": 567,
                "src": "6389:343:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 549,
                  "nodeType": "Block",
                  "src": "6817:285:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 519,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "6833:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 520,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "6837:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 518,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "6827:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6827:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 522,
                      "nodeType": "ExpressionStatement",
                      "src": "6827:13:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6872:16:0",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 525,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 511,
                                    "src": "6885:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 524,
                                  "name": "_isContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "6873:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6873:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 532,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6950:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6954:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6950:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 536,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6970:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6962:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 534,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6962:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 537,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6962:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 538,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 513,
                                    "src": "6974:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 539,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "6978:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 529,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "6929:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 528,
                                      "name": "IERC721TokenReceiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 581,
                                      "src": "6908:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                        "typeString": "type(contract IERC721TokenReceiver)"
                                      }
                                    },
                                    "id": 530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6908:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721TokenReceiver_$581",
                                      "typeString": "contract IERC721TokenReceiver"
                                    }
                                  },
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6933:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "6908:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6908:75:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 541,
                                    "name": "IERC721TokenReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "7007:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721TokenReceiver_$581_$",
                                      "typeString": "type(contract IERC721TokenReceiver)"
                                    }
                                  },
                                  "id": 542,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7028:16:0",
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 580,
                                  "src": "7007:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function IERC721TokenReceiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                  }
                                },
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7045:8:0",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "7007:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6908:145:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6872:181:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "554e534146455f524543495049454e54",
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7067:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            },
                            "value": "UNSAFE_RECIPIENT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_91aca405bce635db2380c779628055bea528973696064aeec59f909f41accf6d",
                              "typeString": "literal_string \"UNSAFE_RECIPIENT\""
                            }
                          ],
                          "id": 523,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6851:244:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 548,
                      "nodeType": "ExpressionStatement",
                      "src": "6851:244:0"
                    }
                  ]
                },
                "id": 550,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_safeMint",
                "nameLocation": "6747:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 516,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 511,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "6765:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "6757:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6757:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6777:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "6769:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6769:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6794:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "6781:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6781:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6756:43:0"
                },
                "returnParameters": {
                  "id": 517,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6817:0:0"
                },
                "scope": 567,
                "src": "6738:364:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 565,
                  "nodeType": "Block",
                  "src": "7351:214:0",
                  "statements": [
                    {
                      "assignments": [
                        558
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 558,
                          "mutability": "mutable",
                          "name": "codeLength",
                          "nameLocation": "7369:10:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 565,
                          "src": "7361:18:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 557,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7361:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 559,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7361:18:0"
                    },
                    {
                      "AST": {
                        "nativeSrc": "7471:56:0",
                        "nodeType": "YulBlock",
                        "src": "7471:56:0",
                        "statements": [
                          {
                            "nativeSrc": "7485:32:0",
                            "nodeType": "YulAssignment",
                            "src": "7485:32:0",
                            "value": {
                              "arguments": [
                                {
                                  "name": "_addr",
                                  "nativeSrc": "7511:5:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7511:5:0"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nativeSrc": "7499:11:0",
                                "nodeType": "YulIdentifier",
                                "src": "7499:11:0"
                              },
                              "nativeSrc": "7499:18:0",
                              "nodeType": "YulFunctionCall",
                              "src": "7499:18:0"
                            },
                            "variableNames": [
                              {
                                "name": "codeLength",
                                "nativeSrc": "7485:10:0",
                                "nodeType": "YulIdentifier",
                                "src": "7485:10:0"
                              }
                            ]
                          }
                        ]
                      },
                      "evmVersion": "shanghai",
                      "externalReferences": [
                        {
                          "declaration": 552,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7511:5:0",
                          "valueSize": 1
                        },
                        {
                          "declaration": 558,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7485:10:0",
                          "valueSize": 1
                        }
                      ],
                      "id": 560,
                      "nodeType": "InlineAssembly",
                      "src": "7462:65:0"
                    },
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 561,
                          "name": "codeLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "7544:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7557:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7544:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 556,
                      "id": 564,
                      "nodeType": "Return",
                      "src": "7537:21:0"
                    }
                  ]
                },
                "id": 566,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_isContract",
                "nameLocation": "7296:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 553,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 552,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nameLocation": "7316:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 566,
                      "src": "7308:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 551,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7308:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7307:15:0"
                },
                "returnParameters": {
                  "id": 556,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 566,
                      "src": "7345:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7345:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7344:6:0"
                },
                "scope": 567,
                "src": "7287:278:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 582,
            "src": "321:7246:0",
            "usedErrors": [],
            "usedEvents": [
              10,
              18,
              26
            ]
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC721TokenReceiver",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 581,
            "linearizedBaseContracts": [
              581
            ],
            "name": "IERC721TokenReceiver",
            "nameLocation": "7579:20:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "150b7a02",
                "id": 580,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "onERC721Received",
                "nameLocation": "7615:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 576,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "7632:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7632:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 571,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "7641:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 570,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7641:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "7650:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7650:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 575,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "7659:14:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 574,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7659:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7631:43:0"
                },
                "returnParameters": {
                  "id": 579,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "7693:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 577,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "7693:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7692:8:0"
                },
                "scope": 581,
                "src": "7606:95:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 582,
            "src": "7569:134:0",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "32:7672:0"
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "errorCode": null,
      "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> lib/forge-std/src/mocks/MockERC721.sol\n",
      "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: Your code or one of its dependencies uses the 'extcodesize' instruction, which is       │\n│ usually needed in the following cases:                                                           │\n│   1. To detect whether an address belongs to a smart contract.                                   │\n│   2. To detect whether the deploy code execution has finished.                                   │\n│ zkSync Era comes with native account abstraction support (so accounts are smart contracts,       │\n│ including private-key controlled EOAs), and you should avoid differentiating between contracts   │\n│ and non-contract addresses.                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
      "severity": "warning",
      "sourceLocation": {
        "file": "0",
        "start": 7499,
        "end": 7517
      },
      "type": "Warning"
    }
  ],
  "version": "0.8.24",
  "long_version": "0.8.24+commit.e11b9ed9.Darwin.appleclang",
  "zk_version": "1.4.0"
}