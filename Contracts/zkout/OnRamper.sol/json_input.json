{
  "language": "Solidity",
  "sources": {
    "src/OnRamper.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract OnRamper {\n    // Function to simulate an onRamp operation\n    // For demonstration, it performs a simple check\n    // and returns the result of this check.\n    function verifyPayPalTransaction(\n        uint256 amount,\n        address onRamper,\n        address offRamper,\n        string calldata onRampersEmail,\n        string calldata offRampersEmail,\n        string calldata transactionSenderEmail,\n        string calldata transactionReceiverEmail,\n        uint256 transactionAmount\n    ) external returns (bool) {\n        // Example check: amount must be greater than 0.01 ether\n        bool success = (keccak256(abi.encodePacked(onRampersEmail)) ==\n            keccak256(abi.encodePacked(transactionSenderEmail))) &&\n            (keccak256(abi.encodePacked(offRampersEmail)) ==\n                keccak256(abi.encodePacked(transactionReceiverEmail))) &&\n            amount == transactionAmount;\n        return success;\n    }\n}\n"
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "ds-test/=lib/forge-std/lib/ds-test/src/",
      "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "mode": "3",
      "details": null,
      "fallbackToOptimizingForSize": false,
      "disableSystemRequestMemoization": true
    },
    "outputSelection": {
      "*": {
        "": [
          "metadata"
        ],
        "*": [
          "abi",
          "evm.methodIdentifiers"
        ]
      }
    },
    "libraries": {},
    "isSystem": false,
    "forceEvmla": false,
    "areLibrariesMissing": false
  }
}